# updated june 8, 2023 with changes to bring to Plone 6 - STILL NEEDS MORE CHANGES.
# buildout.cfg file for Plone 6
# - for production installations please use http://plone.org/download
# Each part has more information about its recipe on PyPi
# http://pypi.python.org/pypi 
# ... just reach by the recipe name
[buildout]
parts =  
    instance
    zopepy
    i18ndude
    zopeskel
    test
    repozo
    backup
    backupcronjob
#    omelette

extends = 
    # UPDATE
    https://dist.plone.org/release/5.1/versions.cfg

# Add additional egg download sources here. dist.plone.org contains archives
# of Plone packages.
# UPDATE
find-links =
    https://dist.plone.org/release/5.1
    https://dist.plone.org/thirdparty

extensions = 
    mr.developer

auto-checkout =
    # UPDATE WITH PRODUCTS TO INSTALL    
    
    
# UPDATE
eggs-directory=~/plone/buildout-cache/eggs
download-cache=~/plone/buildout-cache/downloads

sources = sources

versions = versions

# Reference any folders where you have Python egg source code under development here 
# e.g.: develop = src/my.package
# If you are using the mr.developer extension and have the source code in a 
# repository mr.developer will handle this automatically for you
develop =
    # UPDATE
    
# Create bin/instance command to manage Zope start up and shutdown
# UPDATE
[instance]
recipe = plone.recipe.zope2instance
user = XX_admin_id_XX:YY_admin_password_YY
http-address = 127.0.0.1:ZZ_system_port_ZZ
debug-mode = off
event-log-level = info
verbose-security = on
blob-storage = var/blobstorage
zope-conf-additional = 
    <environment>
      TZ US/Pacific
    </environment>

eggs =
    Pillow
    Plone 
#DocentIMS packages
 # UPDATE
#thirdparty packages
  # UPDATE
    
# Some pre-Plone 3.3 packages may need you to register the package name here in 
# order their configure.zcml to be run (http://plone.org/products/plone/roadmap/247)
# - this is never required for packages in the Products namespace (Products.*)
zcml =
    Products.CMFPlone-meta:meta-bbb.zcml

# zopepy commands allows you to execute Python scripts using a PYTHONPATH 
# including all the configured eggs
[zopepy]
recipe = zc.recipe.egg
eggs = ${instance:eggs}
interpreter = zopepy
scripts = zopepy

# create bin/i18ndude command
[i18ndude]
unzip = true
recipe = zc.recipe.egg
eggs = i18ndude

# create bin/test command
[test]
recipe = zc.recipe.testrunner
defaults = ['--auto-color', '--auto-progress']
eggs =
    ${instance:eggs}

# create ZopeSkel and paster commands with dexterity support
[zopeskel]
recipe = zc.recipe.egg
eggs =
    ZopeSkel
    PasteScript
    zopeskel.dexterity
    
# symlinks all Python source code to parts/omelette folder when buildout is run
# windows users will need to install additional software for this part to build 
# correctly.  See http://pypi.python.org/pypi/collective.recipe.omelette for
# relevant details.
# [omelette]
# recipe = collective.recipe.omelette
# eggs = ${instance:eggs}

[repozo]
recipe = zc.recipe.egg
eggs = ZODB3
scripts = repozo
dependent-scripts = true

[backup]
# UPDATE
recipe = collective.recipe.backup
location = /home/XX_Unix_User_XX/plone/backups/XX_instance_name_XX/filestorage
blobbackuplocation =  /home/XX_Unix_XX/plone/backups/XX_instance_name_XX/blobstorage

[backupcronjob]
# UPDATE
recipe = z3c.recipe.usercrontab
times = 5 0 * * 0
command = ${buildout:directory}/bin/backup

# Put your mr.developer managed source code repositories here, see
# http://pypi.python.org/pypi/mr.developer for details on the format of
# this part
[sources]
# UPDATE   -  USE THESE TWO AS SAMPLES FOR STUFF FROM MY GIT.  THEN DELETE THESE TWO
#collective.developermanual = git git://github.com/collective/collective.developermanual.git
collective.contentrules.comingsoon = git https://github.com/DocentIMS/collective.contentrules.comingsoon.git branch=plone5


# Version pindowns for new style products go here - this section extends one 
# provided in http://dist.plone.org/release/
[versions]
